// Anƒ±lar dizisi
const memories = [
    {
        image: "images/image-1.jpg",
        message: "S√ºta≈ü plaza'da g√ºzel bi g√ºn",
        date: "tarihini bulamadim ama az √ßok belli askl≈üdjasd"
    },

    {
        image: "images/image-2.jpg",
        message: "Uzun s√ºreler benim bile profil resmi yaptƒ±ƒüƒ±m o g√ºzel resim. Ke≈üke o kardan adamƒ± alabilsem ge√ßmi≈üe gidip.",
        date: "24.01.2020"
    },

    {
        image: "images/image-3.jpg",
        message: "ƒ∞lk yƒ±ld√∂n√ºm√ºz. Pizzadan kƒ±l √ßƒ±kmƒ±≈ütƒ±. Ama sanƒ±rƒ±m bu fotoƒüraf √∂ncesine ait. ps: seni b√∂yle yemek istiyorm",
        date: "16.02.2020"
    },

    {
        image: "images/image-4.jpg",
        message: "Bu fotoƒürafƒ± buldum ama nerdeyiz ne yapƒ±yoruz hatƒ±rlayamadƒ±m. Tombul yanaklarƒ±nƒ± √∂pmek istiyorum sadece y√ºzlerce g√ºzel anƒ±mƒ±zdan sadece biri. ",
        date: "23.05.2023"
    },

    {
        image: "images/image-5.jpg",
        message: "Fenasal ≈üekilde baddieye d√∂n√º≈ümeye ba≈üladƒ±ƒüƒ±n zamanlar. Ben hala √ßocuk kalmƒ±≈üƒ±m, o zamanlar √ßok gurur duyuyordum senin gibi bi manitaylayƒ±m diye. Hala duyuyorum orasƒ± ayrƒ± üòé",
        date: "22.07.2021"
    },

    {
        image: "images/image-6.jpg",
        message: "Birlikte 2. sevgililer g√ºn√ºm√ºz. Senin tarzƒ±na her zaman √∂zeniyorum ben a≈ükƒ±m, o zamanlar nude renkler ve kahverengi tonlarƒ±nƒ± kullanƒ±yodun, ben de senden √ßaldƒ±m heheh. ≈ûimdi ikimiz de tarzlarƒ± deƒüi≈ütiridk ama hala birbirimize aitiz o deƒüi≈ümedi :)",
        date: "23.05.2023"
    },

    {
        image: "images/image-7.jpg",
        message: "Bizi ayƒ±racak olan sƒ±nava √ßalƒ±≈üƒ±yoruz. Yeteri kadar √ßalƒ±≈ütƒ±k mƒ±, elimizden gelen bu muydu yoksa? Soru i≈üaretleri bu konuda hep olacak ama sana olan sevgim konusunda asla bebisim.",
        date: "27.03.2024"
    },

    {
        image: "images/image-8.jpg",
        message: "Sƒ±nav √ßalƒ±≈ümalarƒ± bittikten sonra gezmelere √ßƒ±kmƒ±≈üƒ±z. Farklƒ± ≈üehirlere gideceƒüimizi biliyoruz ama yine de ask keyfs yapƒ±yoruz. Ben meth baƒüƒ±mlƒ±sƒ±na benziyorum sen ise hala baddiesin. Damn sana sahip olduƒüum i√ßin √ßok ≈üanslƒ±yƒ±m. ",
        date: "23.08.2024"
    },

    {
        image: "images/image-9.jpg",
        message: "Birlikte ilk tatilimizden bi kare. ƒ∞lk ba≈ülarda hi√ß memnun deƒüildin ve ben de √ßok sorumlu hissediyodum seni mutlu edemediƒüim i√ßin. Ama bence ikimiz de tatilin tadƒ±nƒ± √ßƒ±kardƒ±k sonunda. Hem √ßoƒüu √ßift b√∂yle bi ≈üeyi hayal bile edemez yani dimi + buz pateni sevdalƒ±sƒ± karƒ±m var FYI",
        date: "ORJINAL RESƒ∞M YOK, BANA ATTIƒûIN KLON VAR TARƒ∞Hƒ∞ YANLI≈û."
    },

    {
        image: "images/image-10.jpg",
        message: "ƒ∞lk tatilimizin deniz-kum-g√ºne≈ü faslƒ±ndan bi kare. ≈ûemsiyeyi soƒüukkanlƒ±lƒ±kla aldƒ±ƒüƒ±m i√ßin hala gurur duyuyorum. Seni en pahalƒ± beach'e g√∂t√ºremedim belki ama migros mezeleri yemi≈ütik, bence gayet okeydi. √áok romantik foto btw. ",
        date: "03.09.2024"
    },

    {
        image: "images/image-11.jpg",
        message: "IKEA date'i. Valla sonradan benim aklƒ±ma gelmi≈üti falan diyip √ºst√ºne yatmaya √ßalƒ±≈ütƒ±n, mesajlardan bulduk sonra da ben sana diyodum ordan aklƒ±na geldi falan dedin ama ben yaptƒ±m. Sen mi yapacaksƒ±n dediler valla ben yaptƒ±m asdlk≈üaskld. Bu g√ºn √ßok ate≈üliydin a≈ükƒ±m ya aklƒ±m gizliden gizliye hep insanlar sana bakƒ±yo mu bakmasƒ±nlar diye d√º≈ü√ºnerek ge√ßti l√ºtfen bu kadar ate≈üli olma. Olucaksan evde ol yani yerm ",
        date: "28.01.2025"
    },

    {
        image: "images/image-12.jpg",
        message: "Bu aƒüƒ±z a√ßma olayƒ± sende bu kadar ho≈ü ve √ßekici dururken ben niye andavala benziyom amk ya. Sonu√ß olarak g√ºzelliƒüine hayran kalmalƒ±k ba≈üka bi foto. ",
        date: "ORJINAL RESƒ∞M YOK, BANA ATTIƒûIN KLON VAR TARƒ∞Hƒ∞ YANLI≈û."
    },

    {
        image: "images/image-13.jpg",
        message: "Emrah Sefa G√ºrkan'dan sigara istediƒüim andan bi ka√ß dakika sonrasƒ±. Valla ne yalan s√∂yleyeyim ikonik bi haraket yaptƒ±m orda hala havalƒ± hissediyorum. Yeni kavramƒ±nƒ±n tarihini anlatƒ±yodu hoca konferansta, seni biraz sƒ±kƒ±lmƒ±≈ü hatƒ±rlƒ±yorum ama hi√ß lafƒ±nƒ± yapmadƒ±n ve dinledin te≈üekk√ºr ederim bana saygƒ± duyduƒüun i√ßin. (Aslƒ±nda sƒ±kƒ±lmadƒ±ysan ve 'beni niye b√∂yle kalƒ±plara koyuyosun ya' diyorsan burnumu ƒ±sƒ±rma izni pass'i veriyorum sana ",
        date: "07.09.2024"
    }
];

document.addEventListener('DOMContentLoaded', () => {
    const giftBox = document.getElementById('giftBox');
    const messageCard = document.getElementById('messageCard');
    const memoryImage = document.getElementById('memoryImage');
    const memoryMessage = document.getElementById('memoryMessage');
    const memoryDate = document.getElementById('memoryDate');
    const shuffleButton = document.getElementById('shuffleButton');
    const stars = document.querySelector('.stars');
    const startOverlay = document.getElementById('startOverlay');
    const startHeart = document.getElementById('startHeart');
    const memoryLayout = document.querySelector('.memory-layout');
    const bgMusic = document.getElementById('bgMusic');

    // Ba≈ülangƒ±√ßta memory-layout gizli
    memoryLayout.style.display = 'none';

    // Fisher-Yates ile karƒ±≈ütƒ±rma fonksiyonu
    function shuffleArray(array) {
        let arr = array.slice();
        for (let i = arr.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [arr[i], arr[j]] = [arr[j], arr[i]];
        }
        return arr;
    }

    let shuffledMemories = shuffleArray(memories);
    let currentIndex = 0;

    function showNextMemory() {
        currentMemory = shuffledMemories[currentIndex];
        showMemory(currentMemory);
        currentIndex++;
        if (currentIndex >= shuffledMemories.length) {
            shuffledMemories = shuffleArray(memories);
            currentIndex = 0;
        }
    }

    // Anƒ±yƒ± g√∂sterme fonksiyonu
    function showMemory(memory) {
        memoryImage.style.opacity = '0';
        memoryImage.style.transform = 'scale(0.95)';
        setTimeout(() => {
            memoryImage.src = memory.image;
            memoryMessage.textContent = memory.message;
            memoryDate.textContent = memory.date;
            memoryImage.style.opacity = '1';
            memoryImage.style.transform = 'scale(1)';
        }, 300);
    }

    // S√ºrekli arka plan renk ge√ßi≈üi (HSL ile yumu≈üak ge√ßi≈ü)
    let hue = 340; // Pembe tonuna yakƒ±n ba≈ülat
    function cycleBackgroundSmooth() {
        const color1 = `hsl(${hue}, 80%, 90%)`;
        const color2 = `hsl(${(hue + 30) % 360}, 80%, 85%)`;
        document.body.style.background = `linear-gradient(135deg, ${color1}, ${color2})`;
        hue = (hue + 0.12) % 360; // Daha yava≈ü ge√ßi≈ü i√ßin k√º√ß√ºk artƒ±r
        requestAnimationFrame(cycleBackgroundSmooth);
    }
    cycleBackgroundSmooth();

    // Arka plan ve kalp animasyonu fonksiyonu
    function animateBackgroundAndHeartsWithPop(popTargets = []) {
        // Renk ge√ßi≈ü adƒ±mlarƒ±
        const steps = [
            '#FFE4E1', // Ba≈ülangƒ±√ß
            '#FFD1DC',
            '#FFB6C1',
            '#FF8DA1', // En pembe
        ];
        const original = document.body.style.background;
        let i = 0;
        function stepForward() {
            if (i < steps.length) {
                document.body.style.background = steps[i];
                i++;
                setTimeout(stepForward, 80);
            } else {
                // Pop efekti
                popTargets.forEach(el => {
                    el.classList.add('pop-effect');
                    setTimeout(() => el.classList.remove('pop-effect'), 350);
                });
                setTimeout(stepBackward, 350);
            }
        }
        function stepBackward() {
            if (i > 0) {
                i--;
                document.body.style.background = steps[i];
                setTimeout(stepBackward, 80);
            } else {
                document.body.style.background = '';
            }
        }
        stepForward();
        // Saƒü ve sol kalp
        for (let side of ['left', 'right']) {
            const heart = document.createElement('div');
            heart.className = 'rising-heart';
            heart.textContent = '‚ù§Ô∏è';
            heart.style[side] = '10vw';
            heart.style.bottom = '40px';
            document.body.appendChild(heart);
            setTimeout(() => heart.remove(), 1200);
        }
    }

    // ƒ∞lk tƒ±klama
    startHeart.addEventListener('click', () => {
        startOverlay.classList.add('hide');
        memoryLayout.style.display = 'flex';
        animateBackgroundAndHeartsWithPop([
            document.querySelector('.memory-image-box'),
            document.querySelector('.memory-message-box')
        ]);
        showNextMemory();
        if (bgMusic) {
            bgMusic.volume = 0.5;
            bgMusic.play();
        }
    });

    // Yeni Anƒ± butonuna basƒ±lma sayacƒ± ve easter egg
    let shuffleCount = 0;
    const shuffleMessages = {
        3: "L√ºtfen bana daha fazla tƒ±klama, elimdeki resimler biticek",
        4: "≈û≈ühh tƒ±klama diyorum aloo",
        5: "OLM Kƒ∞ME Dƒ∞YOM LA NOLUR TIKLAMAYIN",
        6: "≈ûakaydƒ±ƒ±ƒ±ƒ±, Fisher-Yates algoirtmasƒ± ile karƒ±≈ütƒ±lƒ±rmƒ±≈ü resimler i√ßeriyorum. Elimde ≈üuana kadar g√∂rd√ºƒü√ºnden bi fazla resim var. Yani %50'ye geldin, iyi deƒüerlendir"
    };
    let shuffleMsgTimeout = null;

    shuffleButton.addEventListener('click', () => {
        shuffleCount++;
        // Daha fazla ve uzun s√ºreli kalp animasyonu
        for (let i = 0; i < 10; i++) {
            setTimeout(() => {
                for (let side of ['left', 'right']) {
                    const heart = document.createElement('div');
                    heart.className = 'rising-heart';
                    heart.textContent = '‚ù§Ô∏è';
                    heart.style[side] = (10 + Math.random()*10) + 'vw';
                    heart.style.bottom = (40 + Math.random()*40) + 'px';
                    heart.style.fontSize = (2 + Math.random()*1.5) + 'rem';
                    heart.style.animationDuration = '2.5s';
                    document.body.appendChild(heart);
                    setTimeout(() => heart.remove(), 2500);
                }
            }, i*120);
        }
        // Easter egg: buton konu≈üuyor (bubble olarak)
        const prevBubble = document.querySelector('.shuffle-bubble');
        if (prevBubble) prevBubble.remove();
        if (shuffleMessages[shuffleCount]) {
            const bubble = document.createElement('div');
            bubble.className = 'shuffle-bubble';
            bubble.textContent = shuffleMessages[shuffleCount];
            document.body.appendChild(bubble);
        }
        showNextMemory();
    });

    // Yƒ±ldƒ±zlarƒ± olu≈ütur
    for (let i = 0; i < 50; i++) {
        const star = document.createElement('div');
        star.style.position = 'absolute';
        star.style.width = '2px';
        star.style.height = '2px';
        star.style.background = '#fff';
        star.style.borderRadius = '50%';
        star.style.left = `${Math.random() * 100}%`;
        star.style.top = `${Math.random() * 100}%`;
        star.style.animation = `twinkle ${Math.random() * 3 + 2}s infinite`;
        stars.appendChild(star);
    }

    // Yƒ±ldƒ±z parƒ±ltƒ± animasyonu
    const style = document.createElement('style');
    style.textContent = `
        @keyframes twinkle {
            0%, 100% { opacity: 0.2; }
            50% { opacity: 1; }
        }
    `;
    document.head.appendChild(style);

    // Chat popup a√ßma/kapama
    const chatBtn = document.getElementById('chatBtn');
    const chatPopup = document.getElementById('chatPopup');
    const closeChat = document.getElementById('closeChat');
    const popupContent = chatPopup.querySelector('.popup-content');
    chatBtn.addEventListener('click', () => {
        chatPopup.classList.add('active');
        // Metin fade-in i√ßin √∂nce sƒ±fƒ±rla sonra tetikle
        popupContent.style.opacity = '0';
        setTimeout(() => {
            popupContent.style.opacity = '1';
        }, 100);
    });
    closeChat.addEventListener('click', () => {
        chatPopup.classList.remove('active');
        popupContent.style.opacity = '0';
    });
}); 